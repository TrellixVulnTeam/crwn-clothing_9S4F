{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { getAuth } from \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyAXLOKKm-CHeBwuxi_SMcGUuGZMLDS7Sl4\",\n  authDomain: \"crwn-db-fc4f0.firebaseapp.com\",\n  projectId: \"crwn-db-fc4f0\",\n  storageBucket: \"crwn-db-fc4f0.appspot.com\",\n  messagingSenderId: \"843143683635\",\n  appId: \"1:843143683635:web:f17234c1a955cae2b84d46\",\n  measurementId: \"G-M333YR5NQM\"\n};\nfirebase.initializeApp(config); ///export const auth = firebase.auth();\n\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(userAuth);\n  if (!userAuth) return;else {}\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nif (user !== null) {\n  // The user object has basic properties such as display name, email, etc.\n  const displayName = user.displayName;\n  const email = user.email;\n  const photoURL = user.photoURL;\n  const emailVerified = user.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n  // this value to authenticate with your backend server, if\n  // you have one. Use User.getToken() instead.\n\n  const uid = user.uid;\n}","map":{"version":3,"sources":["/Users/manjunj/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","getAuth","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","createUserProfileDocument","userAuth","additionalData","console","log","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","user","currentUser","displayName","email","photoURL","emailVerified","uid"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,+BAFF;AAGVC,EAAAA,SAAS,EAAE,eAHD;AAIVC,EAAAA,aAAa,EAAE,2BAJL;AAKVC,EAAAA,iBAAiB,EAAE,cALT;AAMVC,EAAAA,KAAK,EAAE,2CANG;AAOVC,EAAAA,aAAa,EAAE;AAPL,CAAd;AAUET,QAAQ,CAACU,aAAT,CAAuBR,MAAvB,E,CAEA;;AACA,OAAO,MAAMS,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AACP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,MAAI,CAACA,QAAL,EAAe,OAAf,KACI,CAEH;AACF,CANM;AAQP,MAAMI,QAAQ,GAAG,IAAIjB,QAAQ,CAACkB,IAAT,CAAcC,kBAAlB,EAAjB;AACAF,QAAQ,CAACG,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAKJ,IAAI,CAACK,eAAL,CAAqBN,QAArB,CAA9B;AACP,eAAejB,QAAf;AAGF,MAAMkB,IAAI,GAAGjB,OAAO,EAApB;AACA,MAAMuB,IAAI,GAAGN,IAAI,CAACO,WAAlB;;AACA,IAAID,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA,QAAME,WAAW,GAAGF,IAAI,CAACE,WAAzB;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACG,KAAnB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAtB;AACA,QAAMC,aAAa,GAAGL,IAAI,CAACK,aAA3B,CALiB,CAOjB;AACA;AACA;;AACA,QAAMC,GAAG,GAAGN,IAAI,CAACM,GAAjB;AACD","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { getAuth } from \"firebase/auth\";\n\nconst config= {\n    apiKey: \"AIzaSyAXLOKKm-CHeBwuxi_SMcGUuGZMLDS7Sl4\",\n    authDomain: \"crwn-db-fc4f0.firebaseapp.com\",\n    projectId: \"crwn-db-fc4f0\",\n    storageBucket: \"crwn-db-fc4f0.appspot.com\",\n    messagingSenderId: \"843143683635\",\n    appId: \"1:843143683635:web:f17234c1a955cae2b84d46\",\n    measurementId: \"G-M333YR5NQM\"\n  };\n\n  firebase.initializeApp(config);\n\n  ///export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n  export const createUserProfileDocument = async (userAuth, additionalData)=>{\n    console.log(userAuth)\n    if (!userAuth) return;\n    else{\n\n    }\n  }\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:'select_account'});\n  export const signInWithGoogle = () =>auth.signInWithPopup(provider);\n  export default firebase;\n\n\nconst auth = getAuth();\nconst user = auth.currentUser;\nif (user !== null) {\n  // The user object has basic properties such as display name, email, etc.\n  const displayName = user.displayName;\n  const email = user.email;\n  const photoURL = user.photoURL;\n  const emailVerified = user.emailVerified;\n\n  // The user's ID, unique to the Firebase project. Do NOT use\n  // this value to authenticate with your backend server, if\n  // you have one. Use User.getToken() instead.\n  const uid = user.uid;\n}"]},"metadata":{},"sourceType":"module"}