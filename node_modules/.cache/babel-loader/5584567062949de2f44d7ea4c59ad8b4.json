{"ast":null,"code":"// import firebase from 'firebase/compat/app';\n// import 'firebase/compat/auth';\n// import 'firebase/compat/firestore';\n// const config= {\n//     apiKey: \"AIzaSyAXLOKKm-CHeBwuxi_SMcGUuGZMLDS7Sl4\",\n//     authDomain: \"crwn-db-fc4f0.firebaseapp.com\",\n//     projectId: \"crwn-db-fc4f0\",\n//     storageBucket: \"crwn-db-fc4f0.appspot.com\",\n//     messagingSenderId: \"843143683635\",\n//     appId: \"1:843143683635:web:f17234c1a955cae2b84d46\",\n//     measurementId: \"G-M333YR5NQM\"\n//   };\n//   firebase.initializeApp(config);\n//   export const auth = firebase.auth();\n//   export const firestore = firebase.firestore();\n//   const provider = new firebase.auth.GoogleAuthProvider();\n//   provider.setCustomParameters({prompt:'select_account'});\n//   export const signInWithGoogle = () =>auth.signInWithPopup(provider);\n//   export default firebase;\nimport { getAuth, getRedirectResult, GoogleAuthProvider } from \"firebase/auth\";\nconst auth = getAuth();\ngetRedirectResult(auth).then(result => {\n  // This gives you a Google Access Token. You can use it to access Google APIs.\n  const credential = GoogleAuthProvider.credentialFromResult(result);\n  const token = credential.accessToken; // The signed-in user info.\n\n  const user = result.user;\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message; // The email of the user's account used.\n\n  const email = error.email; // The AuthCredential type that was used.\n\n  const credential = GoogleAuthProvider.credentialFromError(error); // ...\n});\nexport default auth;","map":{"version":3,"sources":["/Users/manjunj/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["getAuth","getRedirectResult","GoogleAuthProvider","auth","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,SAASA,OAAT,EAAkBC,iBAAlB,EAAqCC,kBAArC,QAA+D,eAA/D;AAEA,MAAMC,IAAI,GAAGH,OAAO,EAApB;AACAC,iBAAiB,CAACE,IAAD,CAAjB,CACGC,IADH,CACSC,MAAD,IAAY;AAChB;AACA,QAAMC,UAAU,GAAGJ,kBAAkB,CAACK,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,QAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHgB,CAKhB;;AACA,QAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB;AACD,CARH,EAQKC,KARL,CAQYC,KAAD,IAAW;AAClB;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHkB,CAIlB;;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALkB,CAMlB;;AACA,QAAMX,UAAU,GAAGJ,kBAAkB,CAACgB,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPkB,CAQlB;AACD,CAjBH;AAmBE,eAAeT,IAAf","sourcesContent":["// import firebase from 'firebase/compat/app';\n// import 'firebase/compat/auth';\n// import 'firebase/compat/firestore';\n\n// const config= {\n//     apiKey: \"AIzaSyAXLOKKm-CHeBwuxi_SMcGUuGZMLDS7Sl4\",\n//     authDomain: \"crwn-db-fc4f0.firebaseapp.com\",\n//     projectId: \"crwn-db-fc4f0\",\n//     storageBucket: \"crwn-db-fc4f0.appspot.com\",\n//     messagingSenderId: \"843143683635\",\n//     appId: \"1:843143683635:web:f17234c1a955cae2b84d46\",\n//     measurementId: \"G-M333YR5NQM\"\n//   };\n\n//   firebase.initializeApp(config);\n\n//   export const auth = firebase.auth();\n//   export const firestore = firebase.firestore();\n\n//   const provider = new firebase.auth.GoogleAuthProvider();\n//   provider.setCustomParameters({prompt:'select_account'});\n//   export const signInWithGoogle = () =>auth.signInWithPopup(provider);\n//   export default firebase;\n\nimport { getAuth, getRedirectResult, GoogleAuthProvider } from \"firebase/auth\";\n\nconst auth = getAuth();\ngetRedirectResult(auth)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access Google APIs.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n\n    // The signed-in user info.\n    const user = result.user;\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n  export default auth;"]},"metadata":{},"sourceType":"module"}