{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: \"AIzaSyAXLOKKm-CHeBwuxi_SMcGUuGZMLDS7Sl4\",\n  authDomain: \"crwn-db-fc4f0.firebaseapp.com\",\n  projectId: \"crwn-db-fc4f0\",\n  storageBucket: \"crwn-db-fc4f0.appspot.com\",\n  messagingSenderId: \"843143683635\",\n  appId: \"1:843143683635:web:f17234c1a955cae2b84d46\",\n  measurementId: \"G-M333YR5NQM\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;else {\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = await userRef.get();\n\n    if (!snapshot.exists) {\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createdAt = new Date();\n\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {}\n    }\n\n    return userRef;\n  }\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/manjunj/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AAEA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,+BAFF;AAGVC,EAAAA,SAAS,EAAE,eAHD;AAIVC,EAAAA,aAAa,EAAE,2BAJL;AAKVC,EAAAA,iBAAiB,EAAE,cALT;AAMVC,EAAAA,KAAK,EAAE,2CANG;AAOVC,EAAAA,aAAa,EAAE;AAPL,CAAd;AAUER,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACzE,MAAI,CAACD,QAAL,EAAe,OAAf,KACI;AACF,UAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,QAAI,CAACD,QAAQ,CAACE,MAAd,EAAqB;AACnB,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAAuBT,QAA7B;AACA,YAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,UAAG;AACD,cAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,UAAAA,WADgB;AACHC,UAAAA,KADG;AACIC,UAAAA,SADJ;AACe,aAAGT;AADlB,SAAZ,CAAN;AAGD,OAJD,CAIC,OAAMY,KAAN,EAAY,CAAE;AAChB;;AACD,WAAOX,OAAP;AACD;AACF,CAhBM;AAkBP,MAAMY,QAAQ,GAAG,IAAI3B,QAAQ,CAACU,IAAT,CAAckB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAKrB,IAAI,CAACsB,eAAL,CAAqBL,QAArB,CAA9B;AACP,eAAe3B,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst config= {\n    apiKey: \"AIzaSyAXLOKKm-CHeBwuxi_SMcGUuGZMLDS7Sl4\",\n    authDomain: \"crwn-db-fc4f0.firebaseapp.com\",\n    projectId: \"crwn-db-fc4f0\",\n    storageBucket: \"crwn-db-fc4f0.appspot.com\",\n    messagingSenderId: \"843143683635\",\n    appId: \"1:843143683635:web:f17234c1a955cae2b84d46\",\n    measurementId: \"G-M333YR5NQM\"\n  };\n\n  firebase.initializeApp(config);\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n  \n  export const createUserProfileDocument = async (userAuth, additionalData)=>{\n    if (!userAuth) return;\n    else{\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\n      const snapshot = await userRef.get();\n      if (!snapshot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n        try{\n          await userRef.set({\n            displayName, email, createdAt, ...additionalData\n          })\n        }catch(error){}\n      }\n      return userRef;\n    }\n  }\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:'select_account'});\n  export const signInWithGoogle = () =>auth.signInWithPopup(provider);\n  export default firebase;\n\n"]},"metadata":{},"sourceType":"module"}